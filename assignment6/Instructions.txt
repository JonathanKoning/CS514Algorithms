1. (7 points) Implement Kruskel's and Prim's algorithms for minimum spanning tree.
Your algorithms take a weighted undirected graph as input and output a minimum spanning tree in the form of a set of edges and their total weight.
Call these two functions MST_Kruskel and MST_Prim. 
We use connected graphs here, which means there are no unreachable nodes/vertices.
Nodes and edges are randomly generated. Thus, node numbers are not necessarily continuous or sorted in order.
Input format: ([(0,1,1), (0,2,5), (1,2,1), (2,3,2), (1,3,6)])
        1
 (0) --------- (1) 
    \        /    \
   5 \    1 /      \6
      \    /    2   \
        (2) ---------(3)

The length of the (0,1) edge or (1,0) edge is 1; 
the length of the (0,2) edge or (2,0) edge is 5; 
the length of the (1,2) edge or (2,1) edge is 1, etc.;

Output format: The pair of the weight of the MST, and the list of edges that forms the tree. For example: 

 (4, [(0, 1), (1, 2), (2, 3)])

 Another example:

      2     3
  (0)--(1)--(2)
   |   / \   |
  6| 8/   \5 |7
   | /     \ |
  (3)-------(4)
         9

Input: [(0, 1, 2), (0, 3, 6), (1, 2, 3), (1, 3, 8), (1, 4, 5), (2, 4, 7), (3, 4, 9)]
output: 
(16, [(0, 1), (0, 3), (1, 2), (1, 4)])

(The order of the edges in the output doesn't matter)